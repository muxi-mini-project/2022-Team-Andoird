Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.example.team\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.MOUNT_UNMOUNT_FILESYSTEMS\"\r\n        tools:ignore=\"ProtectedPermissions\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"\r\n        tools:ignore=\"ScopedStorage\" />\r\n\r\n    <!-- Android11新增 -->\r\n    <uses-permission android:name=\"android.permission.MANAGE_EXTERNAL_STORAGE\" />\r\n\r\n    <uses-permission android:name=\"android.permission.QUERY_ALL_PACKAGES\" tools:ignore=\"QueryAllPackagesPermission\" />\r\n\r\n    <application\r\n        android:preserveLegacyExternalStorage=\"true\"\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/title\"\r\n        android:label=\"@string/app_name\"\r\n        android:requestLegacyExternalStorage=\"true\"\r\n        android:networkSecurityConfig = \"@xml/network_security_config\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.Team\">\r\n        <activity\r\n            android:name=\".FirstActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n\r\n        </activity>\r\n        <!--一定要有，不然CrimeActivity打不开-->\r\n\r\n        <activity android:name=\".login.login_ok.Login_over\"></activity>\r\n        <activity android:name=\".home_page.HomePageActivity\"></activity>\r\n        <activity android:name=\".user.UserActivity\"></activity>\r\n        <activity android:name=\".user.Change_nick\"></activity>\r\n        <activity android:name=\".login.logining.LoginActivity\"></activity>\r\n        <activity android:name=\".team.view.CreateActivity\"></activity>\r\n<!--        <activity android:name=\".team.view.ShareTeamActivity\"></activity>-->\r\n        <activity android:name=\".teamwork.Task.TaskActivity\"></activity>\r\n        <activity android:name=\".teamwork.MyTeam.MyTeamActivity\"></activity>\r\n        <activity android:name=\".teamwork.MyTeam.NewItem\"></activity>\r\n        <!-- Android7.0以后读取文件需要配置Provider -->\r\n        <provider\r\n            android:name=\"androidx.core.content.FileProvider\"\r\n            android:authorities=\"com.example.team.fileprovider\"\r\n            android:exported=\"false\"\r\n            android:grantUriPermissions=\"true\">\r\n\r\n            <!-- 元数据 -->\r\n            <meta-data\r\n                android:name=\"android.support.FILE_PROVIDER_PATHS\"\r\n                android:resource=\"@xml/file_paths\" />\r\n        </provider>\r\n\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 151ab6a4f1b5b0bb5a201bbc9557c5603f55542c)
+++ b/app/src/main/AndroidManifest.xml	(date 1679464072955)
@@ -27,7 +27,7 @@
         android:supportsRtl="true"
         android:theme="@style/Theme.Team">
         <activity
-            android:name=".FirstActivity"
+            android:name=".begin.FirstActivity"
             android:exported="true">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
Index: app/src/main/java/com/example/team/begin/FirstActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.team.begin;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentPagerAdapter;\r\nimport androidx.viewpager.widget.ViewPager;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.team.R;\r\nimport com.example.team.StatusBar;\r\nimport com.example.team.home_page.HomePageActivity;\r\nimport com.example.team.login.logining.LoginActivity;\r\nimport com.example.team.team.Bean.UserTeam;\r\n\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class FirstActivity extends StatusBar{\r\n    private ViewPager mViewPager;\r\n    private List<Fragment> fragmentList;\r\n    private List<UserTeam.Team> teams;\r\n    private int currentIndex = 0;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        //设置状态栏透明\r\n        StatusBar_to_transparent(this);\r\n        //状态栏文字自适应\r\n        getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR);\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.first_activity);\r\n\r\n        //如果是初次登录，直接进入主界面\r\n        isFirstLogin();\r\n\r\n        mViewPager = (ViewPager) findViewById(R.id.first_vp);\r\n        fragmentList = new ArrayList<Fragment>();\r\n        fragmentList.add(new Begin1());\r\n        fragmentList.add(new Begin2());\r\n        fragmentList.add(new Begin3());\r\n\r\n        FragmentManager fragmentManager = getSupportFragmentManager();\r\n        FragmentPagerAdapter adapter = new MyPagerAdapter(fragmentManager,fragmentList);\r\n        mViewPager.setAdapter(adapter);\r\n    }\r\n\r\n    /*\r\n    判断是否为初次登陆\r\n     */\r\n    private void isFirstLogin(){\r\n        SharedPreferences sp = getSharedPreferences(LoginActivity.KEY, Context.MODE_PRIVATE);\r\n        String token = sp.getString(LoginActivity.TOKEN,null);\r\n        Log.d(\"FirstActivity\",token);\r\n        if(token != null){\r\n            HomePageActivity.actionStart(FirstActivity.this);\r\n            finish();\r\n        }\r\n    }\r\n\r\n    /*\r\n    切换到下一个fragment\r\n     */\r\n    public void switchNext(){\r\n        currentIndex++;\r\n        mViewPager.setCurrentItem(currentIndex);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/team/begin/FirstActivity.java b/app/src/main/java/com/example/team/begin/FirstActivity.java
--- a/app/src/main/java/com/example/team/begin/FirstActivity.java	(revision 151ab6a4f1b5b0bb5a201bbc9557c5603f55542c)
+++ b/app/src/main/java/com/example/team/begin/FirstActivity.java	(date 1679321824126)
@@ -59,7 +59,7 @@
     private void isFirstLogin(){
         SharedPreferences sp = getSharedPreferences(LoginActivity.KEY, Context.MODE_PRIVATE);
         String token = sp.getString(LoginActivity.TOKEN,null);
-        Log.d("FirstActivity",token);
+//        Log.d("FirstActivity",token);
         if(token != null){
             HomePageActivity.actionStart(FirstActivity.this);
             finish();
Index: app/src/main/java/com/example/team/home_page/HomePageActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.team.home_page;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.PopupWindow;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentPagerAdapter;\r\nimport androidx.viewpager.widget.ViewPager;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.bumptech.glide.load.engine.DiskCacheStrategy;\r\nimport com.bumptech.glide.request.RequestOptions;\r\nimport com.example.team.Api;\r\nimport com.example.team.R;\r\nimport com.example.team.StatusBar;\r\nimport com.example.team.home_page.home_pagefragment.Callback.Callback;\r\nimport com.example.team.home_page.home_pagefragment.Callback.Callback3;\r\nimport com.example.team.home_page.home_pagefragment.view.CompleteFragment;\r\nimport com.example.team.home_page.home_pagefragment.view.InCompleteFragment;\r\nimport com.example.team.home_page.home_pagefragment.net.InitAPI;\r\nimport com.example.team.home_page.home_pagefragment.view.InitFragment;\r\nimport com.example.team.home_page.home_pagefragment.view.TeamFragment;\r\nimport com.example.team.home_page.home_pagefragment.view.UserTeamFragment;\r\nimport com.example.team.home_page.home_pagefragment.view.WholeFragment;\r\nimport com.example.team.login.login_ok.utils.BitmapUtils;\r\nimport com.example.team.login.login_ok.utils.CameraUtils;\r\nimport com.example.team.login.logining.LoginUser;\r\nimport com.example.team.team.Bean.UserTeam;\r\nimport com.example.team.team.view.CreateActivity;\r\nimport com.example.team.team.view.CreateTeamActivity;\r\nimport com.example.team.team.view.JoinTeamActivity;\r\nimport com.example.team.user.view.UserActivity;\r\nimport com.google.android.material.imageview.ShapeableImageView;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Response;\r\nimport retrofit2.Retrofit;\r\n\r\npublic class HomePageActivity extends StatusBar implements View.OnClickListener, Callback, Callback3 {\r\n    private static final String EXTRA_UserTeam = \"com.example.team.home_page.first_activity.team\";\r\n    //保存着Data;\r\n    private String token;\r\n    private ViewPager mViewPager;\r\n    //头像\r\n    private ShapeableImageView mShapeableImageView;\r\n\r\n    //通过回调来获取信息\r\n    private String image;\r\n    //昵称\r\n    private TextView mNickname;\r\n    private String mNick;\r\n    private String name;\r\n    private String avatar;\r\n    //PopupWindow\r\n    private ImageView mAdd;\r\n\r\n    private TextView mCreate;\r\n    private TextView mAdd2;\r\n\r\n\r\n    private ImageButton mwancheng;\r\n    private ImageButton mweiwancheng;\r\n    private ImageButton mquanbu;\r\n    private List<Fragment> mList;\r\n    private InitFragment mInitFragment;\r\n    private UserTeamFragment mUserTeamFragment;\r\n    private static final String INIT_DIALOG = \"Init_dialog\";\r\n    private List<UserTeam.Team> mTeams;\r\n    //Base64\r\n    private String base64Pic;\r\n    //拍照和相册获取图片的Bitmap\r\n    private Bitmap orc_bitmap;\r\n    //Glide请求图片选项配置\r\n    private RequestOptions requestOptions = RequestOptions.circleCropTransform()\r\n            .diskCacheStrategy(DiskCacheStrategy.NONE)//不做磁盘缓存\r\n            .skipMemoryCache(true);//不做内存缓存\r\n\r\n    public static void actionStart(Context context){\r\n        Intent intent = new Intent(context,HomePageActivity.class);\r\n        context.startActivity(intent);\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n\r\n        //设置状态栏透明\r\n        StatusBar_to_transparent(this);\r\n        //状态栏文字自适应\r\n        getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR);\r\n\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.home_page_1);\r\n\r\n        //HeadPart\r\n        mShapeableImageView = (ShapeableImageView) findViewById(R.id.home_page1);\r\n        mShapeableImageView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(HomePageActivity.this,UserActivity.class);\r\n                //Intent intent = UserActivity.newIntent(HomePageActivity.this, image, mNick);\r\n                //变成静态的\r\n                //UserActivity.setCallback(HomePageActivity.this);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        mNickname = (TextView) findViewById(R.id.home_page2);\r\n        //mTeamName=(TextView)findViewById(R.id.home_page3);\r\n        mAdd = (ImageButton) findViewById(R.id.home_page3);\r\n        mAdd.setBackgroundResource(R.mipmap.jia_hao);\r\n        mAdd.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                initPopWindow(v);\r\n            }\r\n        });\r\n\r\n\r\n        //TeamFragment\r\n        FragmentManager fm = getSupportFragmentManager();\r\n        Fragment fragment2 = fm.findFragmentById(R.id.fragment_container);\r\n        if (fragment2 == null) {\r\n            //把teams给fragment\r\n            fragment2 = TeamFragment.newInstance(mTeams);\r\n            //Callback,来调用HomePager的方法\r\n            TeamFragment.setCallback(HomePageActivity.this);\r\n            fm.beginTransaction()\r\n                    .add(R.id.fragment_container, fragment2)\r\n                    .commit();\r\n        }\r\n\r\n        //ViewPager\r\n        mweiwancheng = (ImageButton) findViewById(R.id.home_page4);\r\n        mweiwancheng.setBackgroundResource(R.mipmap.weiwancheng1);\r\n        mweiwancheng.setOnClickListener(this);\r\n\r\n        mwancheng = (ImageButton) findViewById(R.id.home_page5);\r\n        mwancheng.setBackgroundResource(R.mipmap.wancheng2);\r\n        mwancheng.setOnClickListener(this);\r\n\r\n        mquanbu = (ImageButton) findViewById(R.id.home_page6);\r\n        mquanbu.setBackgroundResource(R.mipmap.quabu2);\r\n        mquanbu.setOnClickListener(this);\r\n\r\n        mViewPager = (ViewPager) findViewById(R.id.home_page7);\r\n        mList = new ArrayList<>();\r\n        mList.add(new InCompleteFragment());\r\n        mList.add(new CompleteFragment());\r\n        mList.add(new WholeFragment());\r\n\r\n\r\n        FragmentManager fragmentManager = getSupportFragmentManager();\r\n        mViewPager.setAdapter(new FragmentPagerAdapter(fragmentManager) {\r\n            @NonNull\r\n            @Override\r\n            public Fragment getItem(int position) {\r\n                //返回的是一个实例（fragment实例或者.......）\r\n                //可以拿一个泛型数组来实现\r\n                return mList.get(position);\r\n            }\r\n\r\n            @Override\r\n            public int getCount() {\r\n                return mList.size();\r\n            }\r\n            //删除container中指定下标的视图\r\n            //?????是否需要\r\n            /** @Override public void destroyItem(@NonNull ViewGroup container, int position, @NonNull Object object){\r\n            Fragment fragment = mList.get(position);\r\n            fragmentManager.beginTransaction().hide(fragment).commit();\r\n            }*/\r\n        });\r\n        //设置当前页面\r\n        mViewPager.setCurrentItem(0);\r\n        //设置最多跳转\r\n        mViewPager.setOffscreenPageLimit(2);\r\n        //点击\r\n        mViewPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {\r\n            @Override\r\n            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onPageSelected(int position) {\r\n                switch (position) {\r\n                    case 0:\r\n                        mweiwancheng.setBackgroundResource(R.mipmap.weiwancheng1);\r\n                        mwancheng.setBackgroundResource(R.mipmap.wancheng2);\r\n                        mquanbu.setBackgroundResource(R.mipmap.quabu2);\r\n                        break;\r\n                    case 1:\r\n                        mweiwancheng.setBackgroundResource(R.mipmap.weiwancheng2);\r\n                        mwancheng.setBackgroundResource(R.mipmap.wancheng1);\r\n                        mquanbu.setBackgroundResource(R.mipmap.quabu2);\r\n\r\n                        break;\r\n                    case 2:\r\n                        mweiwancheng.setBackgroundResource(R.mipmap.weiwancheng2);\r\n                        mwancheng.setBackgroundResource(R.mipmap.wancheng2);\r\n                        mquanbu.setBackgroundResource(R.mipmap.quanbu1);\r\n                        break;\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onPageScrollStateChanged(int state) {\r\n\r\n            }\r\n        });\r\n\r\n        initWidgets();\r\n        WebRequest();\r\n\r\n    }\r\n    //要有implements View.OnClickListener\r\n    @Override\r\n    public void onClick(View view) {\r\n        switch (view.getId()) {\r\n            case R.id.home_page4:\r\n                //点击\"健康\"时切换到第一页\r\n                mViewPager.setCurrentItem(0);\r\n                mweiwancheng.setBackgroundResource(R.mipmap.weiwancheng1);\r\n                mwancheng.setBackgroundResource(R.mipmap.wancheng2);\r\n                mquanbu.setBackgroundResource(R.mipmap.quabu2);\r\n                break;\r\n            case R.id.home_page5:\r\n                //点击“运动”时切换到第二页\r\n                mViewPager.setCurrentItem(1);\r\n                mweiwancheng.setBackgroundResource(R.mipmap.weiwancheng2);\r\n                mwancheng.setBackgroundResource(R.mipmap.wancheng1);\r\n                mquanbu.setBackgroundResource(R.mipmap.quabu2);\r\n                break;\r\n            case R.id.home_page6:\r\n                //点击“学习”时切换到第三页\r\n                mViewPager.setCurrentItem(2);\r\n                mweiwancheng.setBackgroundResource(R.mipmap.weiwancheng2);\r\n                mwancheng.setBackgroundResource(R.mipmap.wancheng2);\r\n                mquanbu.setBackgroundResource(R.mipmap.quanbu1);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private void init_dialog() {\r\n        FragmentManager fm = getSupportFragmentManager();\r\n        mInitFragment = InitFragment.newInstance();\r\n        //不需要目标fragment,因为可以判断activity是哪个\r\n        mInitFragment.setCallback(HomePageActivity.this);\r\n        mInitFragment.show(fm, INIT_DIALOG);\r\n    }\r\n\r\n    //显示头像的方法\r\n    private void displayImage2(String imagePath) {\r\n        if (!TextUtils.isEmpty(imagePath)) {\r\n\r\n            //显示图片\r\n            Glide.with(this).load(imagePath).apply(requestOptions).into(mShapeableImageView);\r\n\r\n\r\n            //压缩图片\r\n            orc_bitmap = CameraUtils.compression(BitmapFactory.decodeFile(imagePath));\r\n\r\n            //转Base64\r\n            base64Pic = BitmapUtils.bitmapToBase64(orc_bitmap);\r\n\r\n        } else {\r\n            Toast.makeText(this, \"图片获取失败\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private void initPopWindow(View v) {\r\n        View view = LayoutInflater.from(HomePageActivity.this).\r\n                inflate(R.layout.creat_team_popupwindow, null, false);\r\n\r\n        //1.构造一个PopupWindow，参数依次是加载的View，宽高\r\n        final PopupWindow popWindow = new PopupWindow(view,\r\n                ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT, true);\r\n\r\n         mCreate = (TextView) view.findViewById(R.id.popupwindow2);\r\n         mAdd2 = (TextView) view.findViewById(R.id.popupwindow4);\r\n\r\n\r\n        popWindow.setAnimationStyle(R.anim.anim_pop);  //设置加载动画\r\n\r\n        //这些为了点击非PopupWindow区域，PopupWindow会消失的，如果没有下面的\r\n        //代码的话，你会发现，当你把PopupWindow显示出来了，无论你按多少次后退键\r\n        //PopupWindow并不会关闭，而且退不出程序，加上下述代码可以解决这个问题\r\n        popWindow.setTouchable(true);\r\n        popWindow.setTouchInterceptor(new View.OnTouchListener() {\r\n            @Override\r\n            public boolean onTouch(View v, MotionEvent event) {\r\n                return false;\r\n                // 这里如果返回true的话，touch事件将被拦截\r\n                // 拦截后 PopupWindow的onTouchEvent不被调用，这样点击外部区域无法dismiss\r\n            }\r\n        });\r\n        popWindow.setBackgroundDrawable(new ColorDrawable(0x00000000));    //要为popWindow设置一个背景才有效\r\n\r\n\r\n        //设置popupWindow显示的位置，参数依次是参照View，x轴的偏移量，y轴的偏移量\r\n        //设置0，0为左下角\r\n        //x负为左，y正为右\r\n        popWindow.showAsDropDown(v, -260, 0);\r\n\r\n        //设置popupWindow里的按钮的事件\r\n        mCreate.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(HomePageActivity.this, CreateActivity.class);\r\n                //设置回调接口\r\n                startActivity(intent);\r\n                popWindow.dismiss();\r\n            }\r\n        });\r\n        mAdd2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(HomePageActivity.this, JoinTeamActivity.class);\r\n                startActivity(intent);\r\n                popWindow.dismiss();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void initWidgets(){\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"Token\",0);\r\n        token = sharedPreferences.getString(\"Token\",null);\r\n    }\r\n    //网络请求\r\n    private void WebRequest() {\r\n        //api实例\r\n        Retrofit retrofit = Api.getInstance().getApi();\r\n        //web实例\r\n        InitAPI mInit = retrofit.create(InitAPI.class);\r\n        //call实例\r\n        Call<LoginUser> call = mInit.getNick(token);\r\n        //异步网络请求\r\n        call.enqueue(new retrofit2.Callback<LoginUser>() {\r\n            @Override\r\n            public void onResponse(Call<LoginUser> call, Response<LoginUser> response) {\r\n                if (response.isSuccessful()) {\r\n                    //数据一定以这种形式\r\n                    name = response.body().getData().getNickname();\r\n                    avatar=response.body().getData().getAvatar();\r\n                    //空指针问题\r\n                    if (\" \".equals(name)) {\r\n                        init_dialog();\r\n                    }\r\n                    else {\r\n                        mNick = name;\r\n                        mNickname.setText(mNick);\r\n                        //网络url显示图片\r\n                        Glide.with(HomePageActivity.this).load(avatar).apply(requestOptions)\r\n                                .into(mShapeableImageView);\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n            @Override\r\n            public void onFailure(Call<LoginUser> call, Throwable t) {\r\n                Toast.makeText(HomePageActivity.this, \"网络连接失败\", Toast.LENGTH_SHORT).show();\r\n                //抛出异常\r\n                t.printStackTrace();\r\n                Log.e(\"tag\", t.getMessage());\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    //回调方法\r\n    @Override\r\n    public void dismiss() {\r\n        mInitFragment.dismiss();\r\n    }\r\n\r\n    @Override\r\n    public void SetName(String string) {\r\n        mNick = string;\r\n        mNickname.setText(mNick);\r\n    }\r\n\r\n    @Override\r\n    public void SetHead(String string) {\r\n        //通过回调，得到图片的信息\r\n        image = string;\r\n        displayImage2(string);\r\n    }\r\n    @Override\r\n    public void Users_Team(int team_id) {\r\n        FragmentManager fm = getSupportFragmentManager();\r\n        mUserTeamFragment= UserTeamFragment.newInstance();\r\n        Bundle bundle=new Bundle();\r\n        bundle.putInt(\"team_id\",team_id);\r\n        mUserTeamFragment.setArguments(bundle);\r\n        //不需要目标fragment,因为可以判断activity是哪个\r\n        mUserTeamFragment.show(fm, \"UserTeamFragment\");\r\n\r\n    }\r\n    public static Intent newIntent(Context context, List<UserTeam.Team> teams) {\r\n        Intent intent = new Intent(context, HomePageActivity.class);\r\n        intent.putExtra(EXTRA_UserTeam, (Serializable) teams);\r\n        return intent;\r\n    }\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/team/home_page/HomePageActivity.java b/app/src/main/java/com/example/team/home_page/HomePageActivity.java
--- a/app/src/main/java/com/example/team/home_page/HomePageActivity.java	(revision 151ab6a4f1b5b0bb5a201bbc9557c5603f55542c)
+++ b/app/src/main/java/com/example/team/home_page/HomePageActivity.java	(date 1679463921792)
@@ -45,7 +45,6 @@
 import com.example.team.login.login_ok.utils.CameraUtils;
 import com.example.team.login.logining.LoginUser;
 import com.example.team.team.Bean.UserTeam;
-import com.example.team.team.view.CreateActivity;
 import com.example.team.team.view.CreateTeamActivity;
 import com.example.team.team.view.JoinTeamActivity;
 import com.example.team.user.view.UserActivity;
@@ -329,7 +328,7 @@
         mCreate.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                Intent intent = new Intent(HomePageActivity.this, CreateActivity.class);
+                Intent intent = new Intent(HomePageActivity.this, CreateTeamActivity.class);
                 //设置回调接口
                 startActivity(intent);
                 popWindow.dismiss();
